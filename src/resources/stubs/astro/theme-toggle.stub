import { IconMoon, IconSun } from '@tabler/icons-react'
import { useEffect, useState } from 'react'
import { Button } from '@/components/ui/button'

export function ThemeToggle({ variant = 'outline' }: { variant?: 'outline' | 'ghost' }) {
  const [theme, setTheme] = useState('light')
  const [isMounted, setIsMounted] = useState(false)

  useEffect(() => {
    const savedTheme = localStorage.getItem('theme') || 'light'
    setTheme(savedTheme)
    if (savedTheme === 'dark') {
      document.documentElement.classList.add('dark')
    } else {
      document.documentElement.classList.remove('dark')
    }
    setIsMounted(true)
  }, [])

  if (!isMounted) return null

  const handleSwitchTheme = () => {
    const newTheme = theme === 'light' ? 'dark' : 'light'
    setTheme(newTheme)
    if (newTheme === 'dark') {
      document.documentElement.classList.add('dark')
    } else {
      document.documentElement.classList.remove('dark')
    }
    localStorage.setItem('theme', newTheme)
  }

  return (
     <Button
        variant={variant}
        icon
        aria-label={'Switch to ' + theme === 'light' ? 'dark' : 'light' + 'mode'}
        onPress={() => setTheme(theme === 'light' ? 'dark' : 'light')}
    >
        <IconSun className='h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0' />
        <IconMoon className='absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100' />
    </Button>
  )
}
